/**
 * generated by Xtext 2.33.0.M1
 */
package org.jactr.io2.jactr.modelFragment.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.jactr.io2.jactr.modelFragment.Buffers;
import org.jactr.io2.jactr.modelFragment.Element;
import org.jactr.io2.jactr.modelFragment.Import;
import org.jactr.io2.jactr.modelFragment.ModelExtension;
import org.jactr.io2.jactr.modelFragment.ModelFragmentPackage;
import org.jactr.io2.jactr.modelFragment.ModelModule;
import org.jactr.io2.jactr.modelFragment.PackageDeclaration;
import org.jactr.io2.jactr.modelFragment.ParametersBlock;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Package Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.jactr.io2.jactr.modelFragment.impl.PackageDeclarationImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.jactr.io2.jactr.modelFragment.impl.PackageDeclarationImpl#getImports <em>Imports</em>}</li>
 *   <li>{@link org.jactr.io2.jactr.modelFragment.impl.PackageDeclarationImpl#getModules <em>Modules</em>}</li>
 *   <li>{@link org.jactr.io2.jactr.modelFragment.impl.PackageDeclarationImpl#getExtensions <em>Extensions</em>}</li>
 *   <li>{@link org.jactr.io2.jactr.modelFragment.impl.PackageDeclarationImpl#getBuffers <em>Buffers</em>}</li>
 *   <li>{@link org.jactr.io2.jactr.modelFragment.impl.PackageDeclarationImpl#getElements <em>Elements</em>}</li>
 *   <li>{@link org.jactr.io2.jactr.modelFragment.impl.PackageDeclarationImpl#getParameters <em>Parameters</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PackageDeclarationImpl extends MinimalEObjectImpl.Container implements PackageDeclaration
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getImports() <em>Imports</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImports()
   * @generated
   * @ordered
   */
  protected EList<Import> imports;

  /**
   * The cached value of the '{@link #getModules() <em>Modules</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModules()
   * @generated
   * @ordered
   */
  protected EList<ModelModule> modules;

  /**
   * The cached value of the '{@link #getExtensions() <em>Extensions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExtensions()
   * @generated
   * @ordered
   */
  protected EList<ModelExtension> extensions;

  /**
   * The cached value of the '{@link #getBuffers() <em>Buffers</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBuffers()
   * @generated
   * @ordered
   */
  protected Buffers buffers;

  /**
   * The cached value of the '{@link #getElements() <em>Elements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElements()
   * @generated
   * @ordered
   */
  protected EList<Element> elements;

  /**
   * The cached value of the '{@link #getParameters() <em>Parameters</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameters()
   * @generated
   * @ordered
   */
  protected ParametersBlock parameters;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PackageDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ModelFragmentPackage.Literals.PACKAGE_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelFragmentPackage.PACKAGE_DECLARATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Import> getImports()
  {
    if (imports == null)
    {
      imports = new EObjectContainmentEList<Import>(Import.class, this, ModelFragmentPackage.PACKAGE_DECLARATION__IMPORTS);
    }
    return imports;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ModelModule> getModules()
  {
    if (modules == null)
    {
      modules = new EObjectContainmentEList<ModelModule>(ModelModule.class, this, ModelFragmentPackage.PACKAGE_DECLARATION__MODULES);
    }
    return modules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ModelExtension> getExtensions()
  {
    if (extensions == null)
    {
      extensions = new EObjectContainmentEList<ModelExtension>(ModelExtension.class, this, ModelFragmentPackage.PACKAGE_DECLARATION__EXTENSIONS);
    }
    return extensions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Buffers getBuffers()
  {
    return buffers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBuffers(Buffers newBuffers, NotificationChain msgs)
  {
    Buffers oldBuffers = buffers;
    buffers = newBuffers;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ModelFragmentPackage.PACKAGE_DECLARATION__BUFFERS, oldBuffers, newBuffers);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBuffers(Buffers newBuffers)
  {
    if (newBuffers != buffers)
    {
      NotificationChain msgs = null;
      if (buffers != null)
        msgs = ((InternalEObject)buffers).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ModelFragmentPackage.PACKAGE_DECLARATION__BUFFERS, null, msgs);
      if (newBuffers != null)
        msgs = ((InternalEObject)newBuffers).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ModelFragmentPackage.PACKAGE_DECLARATION__BUFFERS, null, msgs);
      msgs = basicSetBuffers(newBuffers, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelFragmentPackage.PACKAGE_DECLARATION__BUFFERS, newBuffers, newBuffers));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Element> getElements()
  {
    if (elements == null)
    {
      elements = new EObjectContainmentEList<Element>(Element.class, this, ModelFragmentPackage.PACKAGE_DECLARATION__ELEMENTS);
    }
    return elements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParametersBlock getParameters()
  {
    return parameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParameters(ParametersBlock newParameters, NotificationChain msgs)
  {
    ParametersBlock oldParameters = parameters;
    parameters = newParameters;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ModelFragmentPackage.PACKAGE_DECLARATION__PARAMETERS, oldParameters, newParameters);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParameters(ParametersBlock newParameters)
  {
    if (newParameters != parameters)
    {
      NotificationChain msgs = null;
      if (parameters != null)
        msgs = ((InternalEObject)parameters).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ModelFragmentPackage.PACKAGE_DECLARATION__PARAMETERS, null, msgs);
      if (newParameters != null)
        msgs = ((InternalEObject)newParameters).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ModelFragmentPackage.PACKAGE_DECLARATION__PARAMETERS, null, msgs);
      msgs = basicSetParameters(newParameters, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelFragmentPackage.PACKAGE_DECLARATION__PARAMETERS, newParameters, newParameters));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ModelFragmentPackage.PACKAGE_DECLARATION__IMPORTS:
        return ((InternalEList<?>)getImports()).basicRemove(otherEnd, msgs);
      case ModelFragmentPackage.PACKAGE_DECLARATION__MODULES:
        return ((InternalEList<?>)getModules()).basicRemove(otherEnd, msgs);
      case ModelFragmentPackage.PACKAGE_DECLARATION__EXTENSIONS:
        return ((InternalEList<?>)getExtensions()).basicRemove(otherEnd, msgs);
      case ModelFragmentPackage.PACKAGE_DECLARATION__BUFFERS:
        return basicSetBuffers(null, msgs);
      case ModelFragmentPackage.PACKAGE_DECLARATION__ELEMENTS:
        return ((InternalEList<?>)getElements()).basicRemove(otherEnd, msgs);
      case ModelFragmentPackage.PACKAGE_DECLARATION__PARAMETERS:
        return basicSetParameters(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ModelFragmentPackage.PACKAGE_DECLARATION__NAME:
        return getName();
      case ModelFragmentPackage.PACKAGE_DECLARATION__IMPORTS:
        return getImports();
      case ModelFragmentPackage.PACKAGE_DECLARATION__MODULES:
        return getModules();
      case ModelFragmentPackage.PACKAGE_DECLARATION__EXTENSIONS:
        return getExtensions();
      case ModelFragmentPackage.PACKAGE_DECLARATION__BUFFERS:
        return getBuffers();
      case ModelFragmentPackage.PACKAGE_DECLARATION__ELEMENTS:
        return getElements();
      case ModelFragmentPackage.PACKAGE_DECLARATION__PARAMETERS:
        return getParameters();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ModelFragmentPackage.PACKAGE_DECLARATION__NAME:
        setName((String)newValue);
        return;
      case ModelFragmentPackage.PACKAGE_DECLARATION__IMPORTS:
        getImports().clear();
        getImports().addAll((Collection<? extends Import>)newValue);
        return;
      case ModelFragmentPackage.PACKAGE_DECLARATION__MODULES:
        getModules().clear();
        getModules().addAll((Collection<? extends ModelModule>)newValue);
        return;
      case ModelFragmentPackage.PACKAGE_DECLARATION__EXTENSIONS:
        getExtensions().clear();
        getExtensions().addAll((Collection<? extends ModelExtension>)newValue);
        return;
      case ModelFragmentPackage.PACKAGE_DECLARATION__BUFFERS:
        setBuffers((Buffers)newValue);
        return;
      case ModelFragmentPackage.PACKAGE_DECLARATION__ELEMENTS:
        getElements().clear();
        getElements().addAll((Collection<? extends Element>)newValue);
        return;
      case ModelFragmentPackage.PACKAGE_DECLARATION__PARAMETERS:
        setParameters((ParametersBlock)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ModelFragmentPackage.PACKAGE_DECLARATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ModelFragmentPackage.PACKAGE_DECLARATION__IMPORTS:
        getImports().clear();
        return;
      case ModelFragmentPackage.PACKAGE_DECLARATION__MODULES:
        getModules().clear();
        return;
      case ModelFragmentPackage.PACKAGE_DECLARATION__EXTENSIONS:
        getExtensions().clear();
        return;
      case ModelFragmentPackage.PACKAGE_DECLARATION__BUFFERS:
        setBuffers((Buffers)null);
        return;
      case ModelFragmentPackage.PACKAGE_DECLARATION__ELEMENTS:
        getElements().clear();
        return;
      case ModelFragmentPackage.PACKAGE_DECLARATION__PARAMETERS:
        setParameters((ParametersBlock)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ModelFragmentPackage.PACKAGE_DECLARATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ModelFragmentPackage.PACKAGE_DECLARATION__IMPORTS:
        return imports != null && !imports.isEmpty();
      case ModelFragmentPackage.PACKAGE_DECLARATION__MODULES:
        return modules != null && !modules.isEmpty();
      case ModelFragmentPackage.PACKAGE_DECLARATION__EXTENSIONS:
        return extensions != null && !extensions.isEmpty();
      case ModelFragmentPackage.PACKAGE_DECLARATION__BUFFERS:
        return buffers != null;
      case ModelFragmentPackage.PACKAGE_DECLARATION__ELEMENTS:
        return elements != null && !elements.isEmpty();
      case ModelFragmentPackage.PACKAGE_DECLARATION__PARAMETERS:
        return parameters != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //PackageDeclarationImpl
