/*
 * generated by Xtext 2.25.0
 */
grammar InternalModelFragment;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.jactr.io2.jactr.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.jactr.io2.jactr.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.jactr.io2.jactr.services.ModelFragmentGrammarAccess;

}
@parser::members {
	private ModelFragmentGrammarAccess grammarAccess;

	public void setGrammarAccess(ModelFragmentGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModelFragment
entryRuleModelFragment
:
{ before(grammarAccess.getModelFragmentRule()); }
	 ruleModelFragment
{ after(grammarAccess.getModelFragmentRule()); } 
	 EOF 
;

// Rule ModelFragment
ruleModelFragment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelFragmentAccess().getPackageAssignment()); }
		(rule__ModelFragment__PackageAssignment)
		{ after(grammarAccess.getModelFragmentAccess().getPackageAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
		(rule__PackageDeclaration__Group__0)
		{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelModule
entryRuleModelModule
:
{ before(grammarAccess.getModelModuleRule()); }
	 ruleModelModule
{ after(grammarAccess.getModelModuleRule()); } 
	 EOF 
;

// Rule ModelModule
ruleModelModule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelModuleAccess().getGroup()); }
		(rule__ModelModule__Group__0)
		{ after(grammarAccess.getModelModuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelExtension
entryRuleModelExtension
:
{ before(grammarAccess.getModelExtensionRule()); }
	 ruleModelExtension
{ after(grammarAccess.getModelExtensionRule()); } 
	 EOF 
;

// Rule ModelExtension
ruleModelExtension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelExtensionAccess().getGroup()); }
		(rule__ModelExtension__Group__0)
		{ after(grammarAccess.getModelExtensionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameters
entryRuleParameters
:
{ before(grammarAccess.getParametersRule()); }
	 ruleParameters
{ after(grammarAccess.getParametersRule()); } 
	 EOF 
;

// Rule Parameters
ruleParameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersAccess().getGroup()); }
		(rule__Parameters__Group__0)
		{ after(grammarAccess.getParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChunks
entryRuleChunks
:
{ before(grammarAccess.getChunksRule()); }
	 ruleChunks
{ after(grammarAccess.getChunksRule()); } 
	 EOF 
;

// Rule Chunks
ruleChunks 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChunksAccess().getGroup()); }
		(rule__Chunks__Group__0)
		{ after(grammarAccess.getChunksAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChunkDef
entryRuleChunkDef
:
{ before(grammarAccess.getChunkDefRule()); }
	 ruleChunkDef
{ after(grammarAccess.getChunkDefRule()); } 
	 EOF 
;

// Rule ChunkDef
ruleChunkDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChunkDefAccess().getGroup()); }
		(rule__ChunkDef__Group__0)
		{ after(grammarAccess.getChunkDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChunkType
entryRuleChunkType
:
{ before(grammarAccess.getChunkTypeRule()); }
	 ruleChunkType
{ after(grammarAccess.getChunkTypeRule()); } 
	 EOF 
;

// Rule ChunkType
ruleChunkType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChunkTypeAccess().getGroup()); }
		(rule__ChunkType__Group__0)
		{ after(grammarAccess.getChunkTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule Overridable
ruleOverridable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOverridableAccess().getOverrideAssignment()); }
		(rule__Overridable__OverrideAssignment)?
		{ after(grammarAccess.getOverridableAccess().getOverrideAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuffers
entryRuleBuffers
:
{ before(grammarAccess.getBuffersRule()); }
	 ruleBuffers
{ after(grammarAccess.getBuffersRule()); } 
	 EOF 
;

// Rule Buffers
ruleBuffers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuffersAccess().getGroup()); }
		(rule__Buffers__Group__0)
		{ after(grammarAccess.getBuffersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuffer
entryRuleBuffer
:
{ before(grammarAccess.getBufferRule()); }
	 ruleBuffer
{ after(grammarAccess.getBufferRule()); } 
	 EOF 
;

// Rule Buffer
ruleBuffer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBufferAccess().getGroup()); }
		(rule__Buffer__Group__0)
		{ after(grammarAccess.getBufferAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProduction
entryRuleProduction
:
{ before(grammarAccess.getProductionRule()); }
	 ruleProduction
{ after(grammarAccess.getProductionRule()); } 
	 EOF 
;

// Rule Production
ruleProduction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProductionAccess().getGroup()); }
		(rule__Production__Group__0)
		{ after(grammarAccess.getProductionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProductionCondition
entryRuleProductionCondition
:
{ before(grammarAccess.getProductionConditionRule()); }
	 ruleProductionCondition
{ after(grammarAccess.getProductionConditionRule()); } 
	 EOF 
;

// Rule ProductionCondition
ruleProductionCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProductionConditionAccess().getAlternatives()); }
		(rule__ProductionCondition__Alternatives)
		{ after(grammarAccess.getProductionConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMatch
entryRuleMatch
:
{ before(grammarAccess.getMatchRule()); }
	 ruleMatch
{ after(grammarAccess.getMatchRule()); } 
	 EOF 
;

// Rule Match
ruleMatch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMatchAccess().getGroup()); }
		(rule__Match__Group__0)
		{ after(grammarAccess.getMatchAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuery
entryRuleQuery
:
{ before(grammarAccess.getQueryRule()); }
	 ruleQuery
{ after(grammarAccess.getQueryRule()); } 
	 EOF 
;

// Rule Query
ruleQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryAccess().getGroup()); }
		(rule__Query__Group__0)
		{ after(grammarAccess.getQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProxy
entryRuleProxy
:
{ before(grammarAccess.getProxyRule()); }
	 ruleProxy
{ after(grammarAccess.getProxyRule()); } 
	 EOF 
;

// Rule Proxy
ruleProxy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProxyAccess().getGroup()); }
		(rule__Proxy__Group__0)
		{ after(grammarAccess.getProxyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScript
entryRuleScript
:
{ before(grammarAccess.getScriptRule()); }
	 ruleScript
{ after(grammarAccess.getScriptRule()); } 
	 EOF 
;

// Rule Script
ruleScript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScriptAccess().getGroup()); }
		(rule__Script__Group__0)
		{ after(grammarAccess.getScriptAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProductionAction
entryRuleProductionAction
:
{ before(grammarAccess.getProductionActionRule()); }
	 ruleProductionAction
{ after(grammarAccess.getProductionActionRule()); } 
	 EOF 
;

// Rule ProductionAction
ruleProductionAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProductionActionAccess().getAlternatives()); }
		(rule__ProductionAction__Alternatives)
		{ after(grammarAccess.getProductionActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdd
entryRuleAdd
:
{ before(grammarAccess.getAddRule()); }
	 ruleAdd
{ after(grammarAccess.getAddRule()); } 
	 EOF 
;

// Rule Add
ruleAdd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddAccess().getGroup()); }
		(rule__Add__Group__0)
		{ after(grammarAccess.getAddAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRemove
entryRuleRemove
:
{ before(grammarAccess.getRemoveRule()); }
	 ruleRemove
{ after(grammarAccess.getRemoveRule()); } 
	 EOF 
;

// Rule Remove
ruleRemove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRemoveAccess().getGroup()); }
		(rule__Remove__Group__0)
		{ after(grammarAccess.getRemoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModify
entryRuleModify
:
{ before(grammarAccess.getModifyRule()); }
	 ruleModify
{ after(grammarAccess.getModifyRule()); } 
	 EOF 
;

// Rule Modify
ruleModify 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModifyAccess().getSimpleSlotBlockParserRuleCall()); }
		ruleSimpleSlotBlock
		{ after(grammarAccess.getModifyAccess().getSimpleSlotBlockParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule SimpleSlotBlock
ruleSimpleSlotBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleSlotBlockAccess().getGroup()); }
		(rule__SimpleSlotBlock__Group__0)
		{ after(grammarAccess.getSimpleSlotBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIsaBlock
entryRuleIsaBlock
:
{ before(grammarAccess.getIsaBlockRule()); }
	 ruleIsaBlock
{ after(grammarAccess.getIsaBlockRule()); } 
	 EOF 
;

// Rule IsaBlock
ruleIsaBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIsaBlockAccess().getAlternatives()); }
		(rule__IsaBlock__Alternatives)
		{ after(grammarAccess.getIsaBlockAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleSlot
entryRuleSimpleSlot
:
{ before(grammarAccess.getSimpleSlotRule()); }
	 ruleSimpleSlot
{ after(grammarAccess.getSimpleSlotRule()); } 
	 EOF 
;

// Rule SimpleSlot
ruleSimpleSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleSlotAccess().getGroup()); }
		(rule__SimpleSlot__Group__0)
		{ after(grammarAccess.getSimpleSlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexSlot
entryRuleComplexSlot
:
{ before(grammarAccess.getComplexSlotRule()); }
	 ruleComplexSlot
{ after(grammarAccess.getComplexSlotRule()); } 
	 EOF 
;

// Rule ComplexSlot
ruleComplexSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexSlotAccess().getAlternatives()); }
		(rule__ComplexSlot__Alternatives)
		{ after(grammarAccess.getComplexSlotAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanOperation
entryRuleBooleanOperation
:
{ before(grammarAccess.getBooleanOperationRule()); }
	 ruleBooleanOperation
{ after(grammarAccess.getBooleanOperationRule()); } 
	 EOF 
;

// Rule BooleanOperation
ruleBooleanOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanOperationAccess().getAlternatives()); }
		(rule__BooleanOperation__Alternatives)
		{ after(grammarAccess.getBooleanOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalSlot
entryRuleConditionalSlot
:
{ before(grammarAccess.getConditionalSlotRule()); }
	 ruleConditionalSlot
{ after(grammarAccess.getConditionalSlotRule()); } 
	 EOF 
;

// Rule ConditionalSlot
ruleConditionalSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalSlotAccess().getGroup()); }
		(rule__ConditionalSlot__Group__0)
		{ after(grammarAccess.getConditionalSlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrSlot
entryRuleOrSlot
:
{ before(grammarAccess.getOrSlotRule()); }
	 ruleOrSlot
{ after(grammarAccess.getOrSlotRule()); } 
	 EOF 
;

// Rule OrSlot
ruleOrSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrSlotAccess().getGroup()); }
		(rule__OrSlot__Group__0)
		{ after(grammarAccess.getOrSlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndSlot
entryRuleAndSlot
:
{ before(grammarAccess.getAndSlotRule()); }
	 ruleAndSlot
{ after(grammarAccess.getAndSlotRule()); } 
	 EOF 
;

// Rule AndSlot
ruleAndSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndSlotAccess().getGroup()); }
		(rule__AndSlot__Group__0)
		{ after(grammarAccess.getAndSlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotSlot
entryRuleNotSlot
:
{ before(grammarAccess.getNotSlotRule()); }
	 ruleNotSlot
{ after(grammarAccess.getNotSlotRule()); } 
	 EOF 
;

// Rule NotSlot
ruleNotSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotSlotAccess().getGroup()); }
		(rule__NotSlot__Group__0)
		{ after(grammarAccess.getNotSlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParametersBlock
entryRuleParametersBlock
:
{ before(grammarAccess.getParametersBlockRule()); }
	 ruleParametersBlock
{ after(grammarAccess.getParametersBlockRule()); } 
	 EOF 
;

// Rule ParametersBlock
ruleParametersBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersBlockAccess().getGroup()); }
		(rule__ParametersBlock__Group__0)
		{ after(grammarAccess.getParametersBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVARIABLE
entryRuleVARIABLE
:
{ before(grammarAccess.getVARIABLERule()); }
	 ruleVARIABLE
{ after(grammarAccess.getVARIABLERule()); } 
	 EOF 
;

// Rule VARIABLE
ruleVARIABLE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVARIABLEAccess().getGroup()); }
		(rule__VARIABLE__Group__0)
		{ after(grammarAccess.getVARIABLEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNULL
entryRuleNULL
:
{ before(grammarAccess.getNULLRule()); }
	 ruleNULL
{ after(grammarAccess.getNULLRule()); } 
	 EOF 
;

// Rule NULL
ruleNULL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNULLAccess().getNullKeyword()); }
		'null'
		{ after(grammarAccess.getNULLAccess().getNullKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN
:
{ before(grammarAccess.getBOOLEANRule()); }
	 ruleBOOLEAN
{ after(grammarAccess.getBOOLEANRule()); } 
	 EOF 
;

// Rule BOOLEAN
ruleBOOLEAN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOLEANAccess().getAlternatives()); }
		(rule__BOOLEAN__Alternatives)
		{ after(grammarAccess.getBOOLEANAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNUMERIC
entryRuleNUMERIC
:
{ before(grammarAccess.getNUMERICRule()); }
	 ruleNUMERIC
{ after(grammarAccess.getNUMERICRule()); } 
	 EOF 
;

// Rule NUMERIC
ruleNUMERIC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNUMERICAccess().getGroup()); }
		(rule__NUMERIC__Group__0)
		{ after(grammarAccess.getNUMERICAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOVERRIDE
entryRuleOVERRIDE
:
{ before(grammarAccess.getOVERRIDERule()); }
	 ruleOVERRIDE
{ after(grammarAccess.getOVERRIDERule()); } 
	 EOF 
;

// Rule OVERRIDE
ruleOVERRIDE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOVERRIDEAccess().getOverrideKeyword()); }
		'@Override'
		{ after(grammarAccess.getOVERRIDEAccess().getOverrideKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Condition
ruleCondition
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getAlternatives()); }
		(rule__Condition__Alternatives)
		{ after(grammarAccess.getConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getChunkTypeParserRuleCall_0()); }
		ruleChunkType
		{ after(grammarAccess.getElementAccess().getChunkTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getChunksParserRuleCall_1()); }
		ruleChunks
		{ after(grammarAccess.getElementAccess().getChunksParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getProductionParserRuleCall_2()); }
		ruleProduction
		{ after(grammarAccess.getElementAccess().getProductionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getParametersParserRuleCall_3()); }
		ruleParameters
		{ after(grammarAccess.getElementAccess().getParametersParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductionCondition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductionConditionAccess().getMatchParserRuleCall_0()); }
		ruleMatch
		{ after(grammarAccess.getProductionConditionAccess().getMatchParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getProductionConditionAccess().getQueryParserRuleCall_1()); }
		ruleQuery
		{ after(grammarAccess.getProductionConditionAccess().getQueryParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getProductionConditionAccess().getScriptParserRuleCall_2()); }
		ruleScript
		{ after(grammarAccess.getProductionConditionAccess().getScriptParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getProductionConditionAccess().getProxyParserRuleCall_3()); }
		ruleProxy
		{ after(grammarAccess.getProductionConditionAccess().getProxyParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductionAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductionActionAccess().getAddParserRuleCall_0()); }
		ruleAdd
		{ after(grammarAccess.getProductionActionAccess().getAddParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getProductionActionAccess().getRemoveParserRuleCall_1()); }
		ruleRemove
		{ after(grammarAccess.getProductionActionAccess().getRemoveParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getProductionActionAccess().getModifyParserRuleCall_2()); }
		ruleModify
		{ after(grammarAccess.getProductionActionAccess().getModifyParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getProductionActionAccess().getScriptParserRuleCall_3()); }
		ruleScript
		{ after(grammarAccess.getProductionActionAccess().getScriptParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getProductionActionAccess().getProxyParserRuleCall_4()); }
		ruleProxy
		{ after(grammarAccess.getProductionActionAccess().getProxyParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getProductionActionAccess().getOutputParserRuleCall_5()); }
		ruleOutput
		{ after(grammarAccess.getProductionActionAccess().getOutputParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsaBlock__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsaBlockAccess().getGroup_0()); }
		(rule__IsaBlock__Group_0__0)
		{ after(grammarAccess.getIsaBlockAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIsaBlockAccess().getChunkAssignment_1()); }
		(rule__IsaBlock__ChunkAssignment_1)
		{ after(grammarAccess.getIsaBlockAccess().getChunkAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getIsaBlockAccess().getNameAssignment_2()); }
		(rule__IsaBlock__NameAssignment_2)
		{ after(grammarAccess.getIsaBlockAccess().getNameAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexSlot__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexSlotAccess().getBooleanOperationParserRuleCall_0()); }
		ruleBooleanOperation
		{ after(grammarAccess.getComplexSlotAccess().getBooleanOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComplexSlotAccess().getConditionalSlotParserRuleCall_1()); }
		ruleConditionalSlot
		{ after(grammarAccess.getComplexSlotAccess().getConditionalSlotParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOperationAccess().getOrSlotParserRuleCall_0()); }
		ruleOrSlot
		{ after(grammarAccess.getBooleanOperationAccess().getOrSlotParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanOperationAccess().getNotSlotParserRuleCall_1()); }
		ruleNotSlot
		{ after(grammarAccess.getBooleanOperationAccess().getNotSlotParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanOperationAccess().getAndSlotParserRuleCall_2()); }
		ruleAndSlot
		{ after(grammarAccess.getBooleanOperationAccess().getAndSlotParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__NameAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalSlotAccess().getNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConditionalSlotAccess().getNameIDTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionalSlotAccess().getNameVARIABLEParserRuleCall_0_0_1()); }
		ruleVARIABLE
		{ after(grammarAccess.getConditionalSlotAccess().getNameVARIABLEParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getGroup_0()); }
		(rule__Value__Group_0__0)
		{ after(grammarAccess.getValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getStringAssignment_1()); }
		(rule__Value__StringAssignment_1)
		{ after(grammarAccess.getValueAccess().getStringAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNumberAssignment_2()); }
		(rule__Value__NumberAssignment_2)
		{ after(grammarAccess.getValueAccess().getNumberAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getBooleanAssignment_3()); }
		(rule__Value__BooleanAssignment_3)
		{ after(grammarAccess.getValueAccess().getBooleanAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NameAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNameVARIABLEParserRuleCall_0_1_0_0()); }
		ruleVARIABLE
		{ after(grammarAccess.getValueAccess().getNameVARIABLEParserRuleCall_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_0_1_0_1()); }
		RULE_ID
		{ after(grammarAccess.getValueAccess().getNameIDTerminalRuleCall_0_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNameNULLParserRuleCall_0_1_0_2()); }
		ruleNULL
		{ after(grammarAccess.getValueAccess().getNameNULLParserRuleCall_0_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getEQUALSEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getConditionAccess().getEQUALSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getLTEnumLiteralDeclaration_1()); }
		('<')
		{ after(grammarAccess.getConditionAccess().getLTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getLTEEnumLiteralDeclaration_2()); }
		('<=')
		{ after(grammarAccess.getConditionAccess().getLTEEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getGTEnumLiteralDeclaration_3()); }
		('>')
		{ after(grammarAccess.getConditionAccess().getGTEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getGTEEnumLiteralDeclaration_4()); }
		('>=')
		{ after(grammarAccess.getConditionAccess().getGTEEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getNOTEnumLiteralDeclaration_5()); }
		('!=')
		{ after(grammarAccess.getConditionAccess().getNOTEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getNamespaceKeyword_0()); }
	'namespace'
	{ after(grammarAccess.getPackageDeclarationAccess().getNamespaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__1__Impl
	rule__PackageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
	(rule__PackageDeclaration__NameAssignment_1)
	{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__2__Impl
	rule__PackageDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__3__Impl
	rule__PackageDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getImportsAssignment_3()); }
	(rule__PackageDeclaration__ImportsAssignment_3)*
	{ after(grammarAccess.getPackageDeclarationAccess().getImportsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__4__Impl
	rule__PackageDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getModulesAssignment_4()); }
	(rule__PackageDeclaration__ModulesAssignment_4)*
	{ after(grammarAccess.getPackageDeclarationAccess().getModulesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__5__Impl
	rule__PackageDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getExtensionsAssignment_5()); }
	(rule__PackageDeclaration__ExtensionsAssignment_5)*
	{ after(grammarAccess.getPackageDeclarationAccess().getExtensionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__6__Impl
	rule__PackageDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getBuffersAssignment_6()); }
	(rule__PackageDeclaration__BuffersAssignment_6)?
	{ after(grammarAccess.getPackageDeclarationAccess().getBuffersAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__7__Impl
	rule__PackageDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_7()); }
	(rule__PackageDeclaration__ElementsAssignment_7)*
	{ after(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__8__Impl
	rule__PackageDeclaration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getParametersAssignment_9()); }
	(rule__PackageDeclaration__ParametersAssignment_9)?
	{ after(grammarAccess.getPackageDeclarationAccess().getParametersAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__Import__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelModule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelModule__Group__0__Impl
	rule__ModelModule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelModule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelModuleAccess().getModuleKeyword_0()); }
	'module'
	{ after(grammarAccess.getModelModuleAccess().getModuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelModule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelModule__Group__1__Impl
	rule__ModelModule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelModule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelModuleAccess().getModuleClassAssignment_1()); }
	(rule__ModelModule__ModuleClassAssignment_1)
	{ after(grammarAccess.getModelModuleAccess().getModuleClassAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelModule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelModule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelModule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelModuleAccess().getParametersAssignment_2()); }
	(rule__ModelModule__ParametersAssignment_2)?
	{ after(grammarAccess.getModelModuleAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelExtension__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelExtension__Group__0__Impl
	rule__ModelExtension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelExtension__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelExtensionAccess().getExtensionKeyword_0()); }
	'extension'
	{ after(grammarAccess.getModelExtensionAccess().getExtensionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelExtension__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelExtension__Group__1__Impl
	rule__ModelExtension__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelExtension__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelExtensionAccess().getExtensionClassAssignment_1()); }
	(rule__ModelExtension__ExtensionClassAssignment_1)
	{ after(grammarAccess.getModelExtensionAccess().getExtensionClassAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelExtension__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelExtension__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelExtension__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelExtensionAccess().getParametersAssignment_2()); }
	(rule__ModelExtension__ParametersAssignment_2)?
	{ after(grammarAccess.getModelExtensionAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__0__Impl
	rule__Parameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParametersKeyword_0()); }
	'parameters'
	{ after(grammarAccess.getParametersAccess().getParametersKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__1__Impl
	rule__Parameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__2__Impl
	rule__Parameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getElementsAssignment_2()); }
	(rule__Parameters__ElementsAssignment_2)
	{ after(grammarAccess.getParametersAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__3__Impl
	rule__Parameters__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getGroup_3()); }
	(rule__Parameters__Group_3__0)*
	{ after(grammarAccess.getParametersAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__4__Impl
	rule__Parameters__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getParametersAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParametersAssignment_5()); }
	(rule__Parameters__ParametersAssignment_5)
	{ after(grammarAccess.getParametersAccess().getParametersAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_3__0__Impl
	rule__Parameters__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getParametersAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getElementsAssignment_3_1()); }
	(rule__Parameters__ElementsAssignment_3_1)
	{ after(grammarAccess.getParametersAccess().getElementsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chunks__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chunks__Group__0__Impl
	rule__Chunks__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunksAccess().getTypeAssignment_0()); }
	(rule__Chunks__TypeAssignment_0)
	{ after(grammarAccess.getChunksAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chunks__Group__1__Impl
	rule__Chunks__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunksAccess().getChunksAssignment_1()); }
	(rule__Chunks__ChunksAssignment_1)
	{ after(grammarAccess.getChunksAccess().getChunksAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chunks__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunksAccess().getGroup_2()); }
	(rule__Chunks__Group_2__0)*
	{ after(grammarAccess.getChunksAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chunks__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chunks__Group_2__0__Impl
	rule__Chunks__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunksAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getChunksAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chunks__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunksAccess().getChunksAssignment_2_1()); }
	(rule__Chunks__ChunksAssignment_2_1)
	{ after(grammarAccess.getChunksAccess().getChunksAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChunkDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group__0__Impl
	rule__ChunkDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getOverridableParserRuleCall_0()); }
	ruleOverridable
	{ after(grammarAccess.getChunkDefAccess().getOverridableParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group__1__Impl
	rule__ChunkDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getNameAssignment_1()); }
	(rule__ChunkDef__NameAssignment_1)
	{ after(grammarAccess.getChunkDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group__2__Impl
	rule__ChunkDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getGroup_2()); }
	(rule__ChunkDef__Group_2__0)?
	{ after(grammarAccess.getChunkDefAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getParametersAssignment_3()); }
	(rule__ChunkDef__ParametersAssignment_3)?
	{ after(grammarAccess.getChunkDefAccess().getParametersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChunkDef__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group_2__0__Impl
	rule__ChunkDef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getChunkDefAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group_2__1__Impl
	rule__ChunkDef__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getSlotsAssignment_2_1()); }
	(rule__ChunkDef__SlotsAssignment_2_1)
	{ after(grammarAccess.getChunkDefAccess().getSlotsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group_2__2__Impl
	rule__ChunkDef__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getGroup_2_2()); }
	(rule__ChunkDef__Group_2_2__0)*
	{ after(grammarAccess.getChunkDefAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getChunkDefAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChunkDef__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group_2_2__0__Impl
	rule__ChunkDef__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getChunkDefAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkDef__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkDefAccess().getSlotsAssignment_2_2_1()); }
	(rule__ChunkDef__SlotsAssignment_2_2_1)
	{ after(grammarAccess.getChunkDefAccess().getSlotsAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChunkType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__0__Impl
	rule__ChunkType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getOverridableParserRuleCall_0()); }
	ruleOverridable
	{ after(grammarAccess.getChunkTypeAccess().getOverridableParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__1__Impl
	rule__ChunkType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getChunktypeKeyword_1()); }
	'chunktype'
	{ after(grammarAccess.getChunkTypeAccess().getChunktypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__2__Impl
	rule__ChunkType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getNameAssignment_2()); }
	(rule__ChunkType__NameAssignment_2)
	{ after(grammarAccess.getChunkTypeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__3__Impl
	rule__ChunkType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getGroup_3()); }
	(rule__ChunkType__Group_3__0)?
	{ after(grammarAccess.getChunkTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__4__Impl
	rule__ChunkType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getChunkTypeAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__5__Impl
	rule__ChunkType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getSlotsAssignment_5()); }
	(rule__ChunkType__SlotsAssignment_5)*
	{ after(grammarAccess.getChunkTypeAccess().getSlotsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__6__Impl
	rule__ChunkType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getChunkTypeAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getParametersAssignment_7()); }
	(rule__ChunkType__ParametersAssignment_7)?
	{ after(grammarAccess.getChunkTypeAccess().getParametersAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChunkType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group_3__0__Impl
	rule__ChunkType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getExtendsKeyword_3_0()); }
	'extends'
	{ after(grammarAccess.getChunkTypeAccess().getExtendsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChunkType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChunkTypeAccess().getSuperTypeAssignment_3_1()); }
	(rule__ChunkType__SuperTypeAssignment_3_1)
	{ after(grammarAccess.getChunkTypeAccess().getSuperTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	'.*'
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Buffers__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffers__Group__0__Impl
	rule__Buffers__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffersAccess().getBuffersAction_0()); }
	()
	{ after(grammarAccess.getBuffersAccess().getBuffersAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffers__Group__1__Impl
	rule__Buffers__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffersAccess().getBuffersKeyword_1()); }
	'buffers'
	{ after(grammarAccess.getBuffersAccess().getBuffersKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffers__Group__2__Impl
	rule__Buffers__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffersAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBuffersAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffers__Group__3__Impl
	rule__Buffers__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffersAccess().getBuffersAssignment_3()); }
	(rule__Buffers__BuffersAssignment_3)*
	{ after(grammarAccess.getBuffersAccess().getBuffersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffers__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffersAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getBuffersAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Buffer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffer__Group__0__Impl
	rule__Buffer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferAccess().getOverridableParserRuleCall_0()); }
	ruleOverridable
	{ after(grammarAccess.getBufferAccess().getOverridableParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffer__Group__1__Impl
	rule__Buffer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferAccess().getNameAssignment_1()); }
	(rule__Buffer__NameAssignment_1)
	{ after(grammarAccess.getBufferAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffer__Group__2__Impl
	rule__Buffer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBufferAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffer__Group__3__Impl
	rule__Buffer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferAccess().getSourceAssignment_3()); }
	(rule__Buffer__SourceAssignment_3)*
	{ after(grammarAccess.getBufferAccess().getSourceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffer__Group__4__Impl
	rule__Buffer__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getBufferAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buffer__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBufferAccess().getParametersAssignment_5()); }
	(rule__Buffer__ParametersAssignment_5)?
	{ after(grammarAccess.getBufferAccess().getParametersAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Production__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__0__Impl
	rule__Production__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getOverridableParserRuleCall_0()); }
	ruleOverridable
	{ after(grammarAccess.getProductionAccess().getOverridableParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__1__Impl
	rule__Production__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getProductionKeyword_1()); }
	'production'
	{ after(grammarAccess.getProductionAccess().getProductionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__2__Impl
	rule__Production__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getNameAssignment_2()); }
	(rule__Production__NameAssignment_2)
	{ after(grammarAccess.getProductionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__3__Impl
	rule__Production__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getProductionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__4__Impl
	rule__Production__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProductionAccess().getConditionsAssignment_4()); }
		(rule__Production__ConditionsAssignment_4)
		{ after(grammarAccess.getProductionAccess().getConditionsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getProductionAccess().getConditionsAssignment_4()); }
		(rule__Production__ConditionsAssignment_4)*
		{ after(grammarAccess.getProductionAccess().getConditionsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__5__Impl
	rule__Production__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getProductionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__6__Impl
	rule__Production__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getProductionAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__7__Impl
	rule__Production__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProductionAccess().getActionsAssignment_7()); }
		(rule__Production__ActionsAssignment_7)
		{ after(grammarAccess.getProductionAccess().getActionsAssignment_7()); }
	)
	(
		{ before(grammarAccess.getProductionAccess().getActionsAssignment_7()); }
		(rule__Production__ActionsAssignment_7)*
		{ after(grammarAccess.getProductionAccess().getActionsAssignment_7()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__8__Impl
	rule__Production__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getProductionAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Production__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductionAccess().getParametersAssignment_9()); }
	(rule__Production__ParametersAssignment_9)?
	{ after(grammarAccess.getProductionAccess().getParametersAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group__0__Impl
	rule__Match__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getNameAssignment_0()); }
	(rule__Match__NameAssignment_0)
	{ after(grammarAccess.getMatchAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group__1__Impl
	rule__Match__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getMatchAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group__2__Impl
	rule__Match__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getIsaAssignment_2()); }
	(rule__Match__IsaAssignment_2)
	{ after(grammarAccess.getMatchAccess().getIsaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group__3__Impl
	rule__Match__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getSlotsAssignment_3()); }
	(rule__Match__SlotsAssignment_3)*
	{ after(grammarAccess.getMatchAccess().getSlotsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getMatchAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Query__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__0__Impl
	rule__Query__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getQuestionMarkKeyword_0()); }
	'?'
	{ after(grammarAccess.getQueryAccess().getQuestionMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__1__Impl
	rule__Query__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getNameAssignment_1()); }
	(rule__Query__NameAssignment_1)
	{ after(grammarAccess.getQueryAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__2__Impl
	rule__Query__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getQueryAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__3__Impl
	rule__Query__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getSlotsAssignment_3()); }
	(rule__Query__SlotsAssignment_3)*
	{ after(grammarAccess.getQueryAccess().getSlotsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getQueryAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Proxy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proxy__Group__0__Impl
	rule__Proxy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxyAccess().getProxyKeyword_0()); }
	'proxy'
	{ after(grammarAccess.getProxyAccess().getProxyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proxy__Group__1__Impl
	rule__Proxy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxyAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getProxyAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proxy__Group__2__Impl
	rule__Proxy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxyAccess().getNameAssignment_2()); }
	(rule__Proxy__NameAssignment_2)
	{ after(grammarAccess.getProxyAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proxy__Group__3__Impl
	rule__Proxy__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxyAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getProxyAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proxy__Group__4__Impl
	rule__Proxy__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxyAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getProxyAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proxy__Group__5__Impl
	rule__Proxy__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxyAccess().getSlotsAssignment_5()); }
	(rule__Proxy__SlotsAssignment_5)*
	{ after(grammarAccess.getProxyAccess().getSlotsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proxy__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProxyAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getProxyAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Script__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__0__Impl
	rule__Script__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getScriptKeyword_0()); }
	'script'
	{ after(grammarAccess.getScriptAccess().getScriptKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__1__Impl
	rule__Script__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getScriptAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__2__Impl
	rule__Script__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getLanguageAssignment_2()); }
	(rule__Script__LanguageAssignment_2)
	{ after(grammarAccess.getScriptAccess().getLanguageAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__3__Impl
	rule__Script__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getScriptAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Script__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScriptAccess().getScriptAssignment_4()); }
	(rule__Script__ScriptAssignment_4)
	{ after(grammarAccess.getScriptAccess().getScriptAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__0__Impl
	rule__Add__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getPlusSignKeyword_0()); }
	'+'
	{ after(grammarAccess.getAddAccess().getPlusSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__1__Impl
	rule__Add__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getNameAssignment_1()); }
	(rule__Add__NameAssignment_1)
	{ after(grammarAccess.getAddAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__2__Impl
	rule__Add__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAddAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__3__Impl
	rule__Add__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getIsaAssignment_3()); }
	(rule__Add__IsaAssignment_3)?
	{ after(grammarAccess.getAddAccess().getIsaAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__4__Impl
	rule__Add__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getSlotsAssignment_4()); }
	(rule__Add__SlotsAssignment_4)*
	{ after(grammarAccess.getAddAccess().getSlotsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getAddAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Remove__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__0__Impl
	rule__Remove__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getRemoveAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getSimpleSlotBlockParserRuleCall_1()); }
	ruleSimpleSlotBlock
	{ after(grammarAccess.getRemoveAccess().getSimpleSlotBlockParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOutputKeyword_0()); }
	'output'
	{ after(grammarAccess.getOutputAccess().getOutputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
	rule__Output__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOutputAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__2__Impl
	rule__Output__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getStringAssignment_2()); }
	(rule__Output__StringAssignment_2)
	{ after(grammarAccess.getOutputAccess().getStringAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getOutputAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSlotBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSlotBlock__Group__0__Impl
	rule__SimpleSlotBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSlotBlockAccess().getNameAssignment_0()); }
	(rule__SimpleSlotBlock__NameAssignment_0)
	{ after(grammarAccess.getSimpleSlotBlockAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSlotBlock__Group__1__Impl
	rule__SimpleSlotBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSlotBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSimpleSlotBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSlotBlock__Group__2__Impl
	rule__SimpleSlotBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSlotBlockAccess().getSlotsAssignment_2()); }
	(rule__SimpleSlotBlock__SlotsAssignment_2)*
	{ after(grammarAccess.getSimpleSlotBlockAccess().getSlotsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSlotBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSlotBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getSimpleSlotBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IsaBlock__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsaBlock__Group_0__0__Impl
	rule__IsaBlock__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsaBlock__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsaBlockAccess().getIsaKeyword_0_0()); }
	'isa'
	{ after(grammarAccess.getIsaBlockAccess().getIsaKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsaBlock__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsaBlock__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsaBlock__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsaBlockAccess().getTypeAssignment_0_1()); }
	(rule__IsaBlock__TypeAssignment_0_1)
	{ after(grammarAccess.getIsaBlockAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSlot__Group__0__Impl
	rule__SimpleSlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSlotAccess().getNameAssignment_0()); }
	(rule__SimpleSlot__NameAssignment_0)
	{ after(grammarAccess.getSimpleSlotAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSlot__Group__1__Impl
	rule__SimpleSlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSlotAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getSimpleSlotAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSlot__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSlotAccess().getValueAssignment_2()); }
	(rule__SimpleSlot__ValueAssignment_2)
	{ after(grammarAccess.getSimpleSlotAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalSlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalSlot__Group__0__Impl
	rule__ConditionalSlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalSlotAccess().getNameAssignment_0()); }
	(rule__ConditionalSlot__NameAssignment_0)
	{ after(grammarAccess.getConditionalSlotAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalSlot__Group__1__Impl
	rule__ConditionalSlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalSlotAccess().getConditionAssignment_1()); }
	(rule__ConditionalSlot__ConditionAssignment_1)
	{ after(grammarAccess.getConditionalSlotAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalSlot__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalSlotAccess().getValueAssignment_2()); }
	(rule__ConditionalSlot__ValueAssignment_2)
	{ after(grammarAccess.getConditionalSlotAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrSlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrSlot__Group__0__Impl
	rule__OrSlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrSlotAccess().getOrSlotAction_0()); }
	()
	{ after(grammarAccess.getOrSlotAccess().getOrSlotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrSlot__Group__1__Impl
	rule__OrSlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrSlotAccess().getOrKeyword_1()); }
	'or'
	{ after(grammarAccess.getOrSlotAccess().getOrKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrSlot__Group__2__Impl
	rule__OrSlot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrSlotAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getOrSlotAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrSlot__Group__3__Impl
	rule__OrSlot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrSlotAccess().getSlotsAssignment_3()); }
	(rule__OrSlot__SlotsAssignment_3)*
	{ after(grammarAccess.getOrSlotAccess().getSlotsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrSlot__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrSlotAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getOrSlotAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndSlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndSlot__Group__0__Impl
	rule__AndSlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndSlotAccess().getAndSlotAction_0()); }
	()
	{ after(grammarAccess.getAndSlotAccess().getAndSlotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndSlot__Group__1__Impl
	rule__AndSlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndSlotAccess().getAndKeyword_1()); }
	'and'
	{ after(grammarAccess.getAndSlotAccess().getAndKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndSlot__Group__2__Impl
	rule__AndSlot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndSlotAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAndSlotAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndSlot__Group__3__Impl
	rule__AndSlot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndSlotAccess().getSlotsAssignment_3()); }
	(rule__AndSlot__SlotsAssignment_3)*
	{ after(grammarAccess.getAndSlotAccess().getSlotsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndSlot__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndSlotAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getAndSlotAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotSlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotSlot__Group__0__Impl
	rule__NotSlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotSlotAccess().getNotSlotAction_0()); }
	()
	{ after(grammarAccess.getNotSlotAccess().getNotSlotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotSlot__Group__1__Impl
	rule__NotSlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotSlotAccess().getNotKeyword_1()); }
	'not'
	{ after(grammarAccess.getNotSlotAccess().getNotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotSlot__Group__2__Impl
	rule__NotSlot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotSlotAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getNotSlotAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotSlot__Group__3__Impl
	rule__NotSlot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotSlotAccess().getSlotsAssignment_3()); }
	(rule__NotSlot__SlotsAssignment_3)*
	{ after(grammarAccess.getNotSlotAccess().getSlotsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotSlot__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotSlotAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getNotSlotAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
	(rule__Parameter__NameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getValueAssignment_2()); }
	(rule__Parameter__ValueAssignment_2)
	{ after(grammarAccess.getParameterAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParametersBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersBlock__Group__0__Impl
	rule__ParametersBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersBlockAccess().getParametersBlockAction_0()); }
	()
	{ after(grammarAccess.getParametersBlockAccess().getParametersBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersBlock__Group__1__Impl
	rule__ParametersBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersBlockAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getParametersBlockAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersBlock__Group__2__Impl
	rule__ParametersBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersBlockAccess().getParameterAssignment_2()); }
	(rule__ParametersBlock__ParameterAssignment_2)*
	{ after(grammarAccess.getParametersBlockAccess().getParameterAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParametersBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersBlockAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getParametersBlockAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_0__0__Impl
	rule__Value__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValueAction_0_0()); }
	()
	{ after(grammarAccess.getValueAccess().getValueAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getNameAssignment_0_1()); }
	(rule__Value__NameAssignment_0_1)
	{ after(grammarAccess.getValueAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VARIABLE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VARIABLE__Group__0__Impl
	rule__VARIABLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVARIABLEAccess().getEqualsSignKeyword_0()); }
	'='
	{ after(grammarAccess.getVARIABLEAccess().getEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VARIABLE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVARIABLEAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getVARIABLEAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NUMERIC__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMERIC__Group__0__Impl
	rule__NUMERIC__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMERICAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getNUMERICAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMERIC__Group__1__Impl
	rule__NUMERIC__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMERICAccess().getDIGITSTerminalRuleCall_1()); }
	RULE_DIGITS
	{ after(grammarAccess.getNUMERICAccess().getDIGITSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMERIC__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMERICAccess().getGroup_2()); }
	(rule__NUMERIC__Group_2__0)?
	{ after(grammarAccess.getNUMERICAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NUMERIC__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMERIC__Group_2__0__Impl
	rule__NUMERIC__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMERICAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getNUMERICAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMERIC__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMERIC__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMERICAccess().getDIGITSTerminalRuleCall_2_1()); }
	RULE_DIGITS
	{ after(grammarAccess.getNUMERICAccess().getDIGITSTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelFragment__PackageAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelFragmentAccess().getPackagePackageDeclarationParserRuleCall_0()); }
		rulePackageDeclaration
		{ after(grammarAccess.getModelFragmentAccess().getPackagePackageDeclarationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ImportsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getImportsImportParserRuleCall_3_0()); }
		ruleImport
		{ after(grammarAccess.getPackageDeclarationAccess().getImportsImportParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ModulesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getModulesModelModuleParserRuleCall_4_0()); }
		ruleModelModule
		{ after(grammarAccess.getPackageDeclarationAccess().getModulesModelModuleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ExtensionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getExtensionsModelExtensionParserRuleCall_5_0()); }
		ruleModelExtension
		{ after(grammarAccess.getPackageDeclarationAccess().getExtensionsModelExtensionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__BuffersAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getBuffersBuffersParserRuleCall_6_0()); }
		ruleBuffers
		{ after(grammarAccess.getPackageDeclarationAccess().getBuffersBuffersParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ElementsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getElementsElementParserRuleCall_7_0()); }
		ruleElement
		{ after(grammarAccess.getPackageDeclarationAccess().getElementsElementParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ParametersAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getParametersParametersBlockParserRuleCall_9_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getPackageDeclarationAccess().getParametersParametersBlockParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelModule__ModuleClassAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelModuleAccess().getModuleClassSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getModelModuleAccess().getModuleClassSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelModule__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelModuleAccess().getParametersParametersBlockParserRuleCall_2_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getModelModuleAccess().getParametersParametersBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelExtension__ExtensionClassAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelExtensionAccess().getExtensionClassSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getModelExtensionAccess().getExtensionClassSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelExtension__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelExtensionAccess().getParametersParametersBlockParserRuleCall_2_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getModelExtensionAccess().getParametersParametersBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersAccess().getElementsIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getParametersAccess().getElementsIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ElementsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersAccess().getElementsIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParametersAccess().getElementsIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ParametersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersAccess().getParametersParametersBlockParserRuleCall_5_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getParametersAccess().getParametersParametersBlockParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunksAccess().getTypeChunkTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getChunksAccess().getTypeChunkTypeQualifiedNameParserRuleCall_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getChunksAccess().getTypeChunkTypeQualifiedNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getChunksAccess().getTypeChunkTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__ChunksAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunksAccess().getChunksChunkDefParserRuleCall_1_0()); }
		ruleChunkDef
		{ after(grammarAccess.getChunksAccess().getChunksChunkDefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chunks__ChunksAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunksAccess().getChunksChunkDefParserRuleCall_2_1_0()); }
		ruleChunkDef
		{ after(grammarAccess.getChunksAccess().getChunksChunkDefParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getChunkDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__SlotsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkDefAccess().getSlotsSimpleSlotParserRuleCall_2_1_0()); }
		ruleSimpleSlot
		{ after(grammarAccess.getChunkDefAccess().getSlotsSimpleSlotParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__SlotsAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkDefAccess().getSlotsSimpleSlotParserRuleCall_2_2_1_0()); }
		ruleSimpleSlot
		{ after(grammarAccess.getChunkDefAccess().getSlotsSimpleSlotParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkDef__ParametersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkDefAccess().getParametersParametersBlockParserRuleCall_3_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getChunkDefAccess().getParametersParametersBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkTypeAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getChunkTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__SuperTypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkTypeAccess().getSuperTypeChunkTypeCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getChunkTypeAccess().getSuperTypeChunkTypeQualifiedNameParserRuleCall_3_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getChunkTypeAccess().getSuperTypeChunkTypeQualifiedNameParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getChunkTypeAccess().getSuperTypeChunkTypeCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__SlotsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkTypeAccess().getSlotsSimpleSlotParserRuleCall_5_0()); }
		ruleSimpleSlot
		{ after(grammarAccess.getChunkTypeAccess().getSlotsSimpleSlotParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChunkType__ParametersAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChunkTypeAccess().getParametersParametersBlockParserRuleCall_7_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getChunkTypeAccess().getParametersParametersBlockParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Overridable__OverrideAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOverridableAccess().getOverrideOVERRIDEParserRuleCall_0()); }
		ruleOVERRIDE
		{ after(grammarAccess.getOverridableAccess().getOverrideOVERRIDEParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffers__BuffersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuffersAccess().getBuffersBufferParserRuleCall_3_0()); }
		ruleBuffer
		{ after(grammarAccess.getBuffersAccess().getBuffersBufferParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBufferAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__SourceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferAccess().getSourceChunkDefCrossReference_3_0()); }
		(
			{ before(grammarAccess.getBufferAccess().getSourceChunkDefQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getBufferAccess().getSourceChunkDefQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getBufferAccess().getSourceChunkDefCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buffer__ParametersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBufferAccess().getParametersParametersBlockParserRuleCall_5_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getBufferAccess().getParametersParametersBlockParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getProductionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__ConditionsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductionAccess().getConditionsProductionConditionParserRuleCall_4_0()); }
		ruleProductionCondition
		{ after(grammarAccess.getProductionAccess().getConditionsProductionConditionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__ActionsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductionAccess().getActionsProductionActionParserRuleCall_7_0()); }
		ruleProductionAction
		{ after(grammarAccess.getProductionAccess().getActionsProductionActionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Production__ParametersAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductionAccess().getParametersParametersBlockParserRuleCall_9_0()); }
		ruleParametersBlock
		{ after(grammarAccess.getProductionAccess().getParametersParametersBlockParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getNameBufferCrossReference_0_0()); }
		(
			{ before(grammarAccess.getMatchAccess().getNameBufferIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMatchAccess().getNameBufferIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getMatchAccess().getNameBufferCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__IsaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getIsaIsaBlockParserRuleCall_2_0()); }
		ruleIsaBlock
		{ after(grammarAccess.getMatchAccess().getIsaIsaBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__SlotsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
		ruleComplexSlot
		{ after(grammarAccess.getMatchAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getNameBufferCrossReference_1_0()); }
		(
			{ before(grammarAccess.getQueryAccess().getNameBufferIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getQueryAccess().getNameBufferIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getQueryAccess().getNameBufferCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__SlotsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
		ruleComplexSlot
		{ after(grammarAccess.getQueryAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProxyAccess().getNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getProxyAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proxy__SlotsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProxyAccess().getSlotsSimpleSlotParserRuleCall_5_0()); }
		ruleSimpleSlot
		{ after(grammarAccess.getProxyAccess().getSlotsSimpleSlotParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__LanguageAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScriptAccess().getLanguageSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getScriptAccess().getLanguageSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Script__ScriptAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScriptAccess().getScriptCODETerminalRuleCall_4_0()); }
		RULE_CODE
		{ after(grammarAccess.getScriptAccess().getScriptCODETerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getNameBufferCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAddAccess().getNameBufferIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAddAccess().getNameBufferIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAddAccess().getNameBufferCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__IsaAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getIsaIsaBlockParserRuleCall_3_0()); }
		ruleIsaBlock
		{ after(grammarAccess.getAddAccess().getIsaIsaBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__SlotsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getSlotsConditionalSlotParserRuleCall_4_0()); }
		ruleConditionalSlot
		{ after(grammarAccess.getAddAccess().getSlotsConditionalSlotParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__StringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getStringSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getOutputAccess().getStringSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSlotBlockAccess().getNameBufferCrossReference_0_0()); }
		(
			{ before(grammarAccess.getSimpleSlotBlockAccess().getNameBufferIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSimpleSlotBlockAccess().getNameBufferIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getSimpleSlotBlockAccess().getNameBufferCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlotBlock__SlotsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSlotBlockAccess().getSlotsSimpleSlotParserRuleCall_2_0()); }
		ruleSimpleSlot
		{ after(grammarAccess.getSimpleSlotBlockAccess().getSlotsSimpleSlotParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsaBlock__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsaBlockAccess().getTypeChunkTypeCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getIsaBlockAccess().getTypeChunkTypeQualifiedNameParserRuleCall_0_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getIsaBlockAccess().getTypeChunkTypeQualifiedNameParserRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getIsaBlockAccess().getTypeChunkTypeCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsaBlock__ChunkAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsaBlockAccess().getChunkChunkDefCrossReference_1_0()); }
		(
			{ before(grammarAccess.getIsaBlockAccess().getChunkChunkDefQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getIsaBlockAccess().getChunkChunkDefQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getIsaBlockAccess().getChunkChunkDefCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsaBlock__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsaBlockAccess().getNameVARIABLEParserRuleCall_2_0()); }
		ruleVARIABLE
		{ after(grammarAccess.getIsaBlockAccess().getNameVARIABLEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlot__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSlotAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSimpleSlotAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSlot__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSlotAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getSimpleSlotAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalSlotAccess().getNameAlternatives_0_0()); }
		(rule__ConditionalSlot__NameAlternatives_0_0)
		{ after(grammarAccess.getConditionalSlotAccess().getNameAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalSlotAccess().getConditionConditionEnumRuleCall_1_0()); }
		ruleCondition
		{ after(grammarAccess.getConditionalSlotAccess().getConditionConditionEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalSlot__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalSlotAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getConditionalSlotAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrSlot__SlotsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrSlotAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
		ruleComplexSlot
		{ after(grammarAccess.getOrSlotAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndSlot__SlotsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndSlotAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
		ruleComplexSlot
		{ after(grammarAccess.getAndSlotAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotSlot__SlotsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotSlotAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
		ruleComplexSlot
		{ after(grammarAccess.getNotSlotAccess().getSlotsComplexSlotParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getParameterAccess().getNameSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getParameterAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParametersBlock__ParameterAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersBlockAccess().getParameterParameterParserRuleCall_2_0()); }
		ruleParameter
		{ after(grammarAccess.getParametersBlockAccess().getParameterParameterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNameAlternatives_0_1_0()); }
		(rule__Value__NameAlternatives_0_1_0)
		{ after(grammarAccess.getValueAccess().getNameAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__StringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getStringSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getValueAccess().getStringSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NumberAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNumberNUMERICParserRuleCall_2_0()); }
		ruleNUMERIC
		{ after(grammarAccess.getValueAccess().getNumberNUMERICParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__BooleanAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getBooleanBOOLEANParserRuleCall_3_0()); }
		ruleBOOLEAN
		{ after(grammarAccess.getValueAccess().getBooleanBOOLEANParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|':') ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'_')* ('a'..'z'|'A'..'Z'|'0'..'9');

RULE_DIGITS : ('0'..'9')+;

RULE_CODE : '<[[' ( options {greedy=false;} : . )*']]>';

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
