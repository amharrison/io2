/*
 * generated by Xtext 2.16.0
 */
package org.jactr.io2.jactr.ui.labeling

import org.eclipse.xtext.resource.IEObjectDescription
import org.eclipse.xtext.ui.label.DefaultDescriptionLabelProvider
import org.jactr.io2.jactr.modelFragment.Buffer
import org.jactr.io2.jactr.modelFragment.ChunkDef
import org.jactr.io2.jactr.modelFragment.ChunkType
import org.jactr.io2.jactr.modelFragment.Production

/**
 * Provides labels for IEObjectDescriptions and IResourceDescriptions.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class ModelFragmentDescriptionLabelProvider extends DefaultDescriptionLabelProvider {

val IMAGE_HOME = "basic/"
	// Labels and icons can be computed like this:
	
	override image(IEObjectDescription ele){
	  switch(ele.EClass.name)
	  {
	    case 'ChunkType' : return IMAGE_HOME+"chunktype.gif"
	    case 'ChunkDef' : return IMAGE_HOME+"chunk.gif"
	    case 'Production' : return IMAGE_HOME+"production.gif"
	    case 'Buffer' : return IMAGE_HOME+"buffer.gif"
	    default : return super.image(ele)
	  }
	}
	
//	override text(IEObjectDescription ele) {
//		ele.name.toString
//	}
//	 
//	override image(IEObjectDescription ele) {
//		ele.EClass.name + '.gif'
//	}
}
